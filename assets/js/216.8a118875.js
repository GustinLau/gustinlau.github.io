(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{539:function(a,t,s){"use strict";s.r(t);var e=s(7),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("Level",{attrs:{type:2}}),a._v(" "),t("h2",{attrs:{id:"问题描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[a._v("#")]),a._v(" 问题描述")]),a._v(" "),t("p",[a._v("给你两个字符串 "),t("code",[a._v("word1")]),a._v(" 和 "),t("code",[a._v("word2")]),a._v(" 。你需要按下述方式构造一个新字符串 "),t("code",[a._v("merge")]),a._v(" ：如果 "),t("code",[a._v("word1")]),a._v(" 或 "),t("code",[a._v("word2")]),a._v(" 非空，选择 "),t("strong",[a._v("下面选项之一")]),a._v(" 继续操作：")]),a._v(" "),t("ul",[t("li",[a._v("如果 "),t("code",[a._v("word1")]),a._v(" 非空，将 "),t("code",[a._v("word1")]),a._v(" 中的第一个字符附加到 "),t("code",[a._v("merge")]),a._v(" 的末尾，并将其从 "),t("code",[a._v("word1")]),a._v(" 中移除。\n"),t("ul",[t("li",[a._v("例如，"),t("code",[a._v('word1 = "abc"')]),a._v(" 且 "),t("code",[a._v('merge = "dv"')]),a._v(" ，在执行此选项操作之后，"),t("code",[a._v('word1 = "bc"')]),a._v(" ，同时 "),t("code",[a._v('merge = "dva"')]),a._v(" 。")])])]),a._v(" "),t("li",[a._v("如果 "),t("code",[a._v("word2")]),a._v(" 非空，将 "),t("code",[a._v("word2")]),a._v(" 中的第一个字符附加到 "),t("code",[a._v("merge")]),a._v(" 的末尾，并将其从 "),t("code",[a._v("word2")]),a._v(" 中移除。\n"),t("ul",[t("li",[a._v("例如，"),t("code",[a._v('word2 = "abc"')]),a._v(" 且 "),t("code",[a._v('merge = ""')]),a._v(" ，在执行此选项操作之后，"),t("code",[a._v('word2 = "bc"')]),a._v(" ，同时 "),t("code",[a._v('merge = "a"')]),a._v(" 。")])])])]),a._v(" "),t("p",[a._v("返回你可以构造的字典序 "),t("strong",[a._v("最大")]),a._v(" 的合并字符串 "),t("code",[a._v("merge")]),a._v(" 。")]),a._v(" "),t("p",[a._v("长度相同的两个字符串 "),t("code",[a._v("a")]),a._v(" 和 "),t("code",[a._v("b")]),a._v(" 比较字典序大小，如果在 "),t("code",[a._v("a")]),a._v(" 和 "),t("code",[a._v("b")]),a._v(" 出现不同的第一个位置，"),t("code",[a._v("a")]),a._v(" 中字符在字母表中的出现顺序位于 "),t("code",[a._v("b")]),a._v(" 中相应字符之后，就认为字符串 "),t("code",[a._v("a")]),a._v(" 按字典序比字符串 "),t("code",[a._v("b")]),a._v(" 更大。例如，"),t("code",[a._v('"abcd"')]),a._v(" 按字典序比 "),t("code",[a._v('"abcc"')]),a._v(" 更大，因为两个字符串出现不同的第一个位置是第四个字符，而 "),t("code",[a._v("d")]),a._v(" 在字母表中的出现顺序位于 "),t("code",[a._v("c")]),a._v(" 之后。")]),a._v(" "),t("p",[a._v("示例 1：")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('输入：word1 = "cabaa", word2 = "bcaaa"\n输出："cbcabaaaaa"\n解释：构造字典序最大的合并字符串，可行的一种方法如下所示：\n- 从 word1 中取第一个字符：merge = "c"，word1 = "abaa"，word2 = "bcaaa"\n- 从 word2 中取第一个字符：merge = "cb"，word1 = "abaa"，word2 = "caaa"\n- 从 word2 中取第一个字符：merge = "cbc"，word1 = "abaa"，word2 = "aaa"\n- 从 word1 中取第一个字符：merge = "cbca"，word1 = "baa"，word2 = "aaa"\n- 从 word1 中取第一个字符：merge = "cbcab"，word1 = "aa"，word2 = "aaa"\n- 将 word1 和 word2 中剩下的 5 个 a 附加到 merge 的末尾。\n')])])]),t("p",[a._v("示例 2：")]),a._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('输入：word1 = "abcabc", word2 = "abdcaba"\n输出："abdcabcabcaba"\n')])])]),t("p",[a._v("提示：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("1 <= word1.length, word2.length <= 3000")])]),a._v(" "),t("li",[t("code",[a._v("word1")]),a._v(" 和 "),t("code",[a._v("word2")]),a._v(" 仅由小写英文组成")])]),a._v(" "),t("h2",{attrs:{id:"贪心"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贪心"}},[a._v("#")]),a._v(" 贪心")]),a._v(" "),t("p",[a._v("使用双指针指分别向两个字符串的头部，然后循环比较两个字符串从指针开始的子字符串字典序大小，选取较大的子字符串的首字母拼接到答案字符串中。这样相当于每次选取较大的字母，而且避免了当指针指向的字母相同时需要比较后缀的麻烦。")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * @param {string} word1\n * @param {string} word2\n * @return {string}\n */")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("largestMerge")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("word1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" word2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" ans "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" word1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" word2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" word1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" word1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("slice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" word2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("slice")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      ans "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" word1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      ans "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" word2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("j"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" ans\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[a._v("时间复杂度："),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mi",[a._v("O")]),t("mo",{attrs:{stretchy:"false"}},[a._v("(")]),t("mo",{attrs:{stretchy:"false"}},[a._v("(")]),t("mi",[a._v("n")]),t("mo",[a._v("+")]),t("mi",[a._v("m")]),t("mo",{attrs:{stretchy:"false"}},[a._v(")")]),t("mo",[a._v("×")]),t("mi",[a._v("m")]),t("mi",[a._v("a")]),t("mi",[a._v("x")]),t("mo",{attrs:{stretchy:"false"}},[a._v("(")]),t("mi",[a._v("n")]),t("mo",{attrs:{separator:"true"}},[a._v(",")]),t("mi",[a._v("m")]),t("mo",{attrs:{stretchy:"false"}},[a._v(")")]),t("mo",{attrs:{stretchy:"false"}},[a._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("O((n+m) \\times  max(n,m))")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[a._v("O")]),t("span",{staticClass:"mopen"},[a._v("((")]),t("span",{staticClass:"mord mathnormal"},[a._v("n")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),t("span",{staticClass:"mbin"},[a._v("+")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal"},[a._v("m")]),t("span",{staticClass:"mclose"},[a._v(")")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),t("span",{staticClass:"mbin"},[a._v("×")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal"},[a._v("ma")]),t("span",{staticClass:"mord mathnormal"},[a._v("x")]),t("span",{staticClass:"mopen"},[a._v("(")]),t("span",{staticClass:"mord mathnormal"},[a._v("n")]),t("span",{staticClass:"mpunct"},[a._v(",")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[a._v("m")]),t("span",{staticClass:"mclose"},[a._v("))")])])])])]),a._v(" "),t("li",[a._v("空间复杂度："),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mi",[a._v("O")]),t("mo",{attrs:{stretchy:"false"}},[a._v("(")]),t("mi",[a._v("n")]),t("mo",[a._v("+")]),t("mi",[a._v("m")]),t("mo",{attrs:{stretchy:"false"}},[a._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("O(n+m)")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[a._v("O")]),t("span",{staticClass:"mopen"},[a._v("(")]),t("span",{staticClass:"mord mathnormal"},[a._v("n")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),t("span",{staticClass:"mbin"},[a._v("+")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal"},[a._v("m")]),t("span",{staticClass:"mclose"},[a._v(")")])])])])])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);