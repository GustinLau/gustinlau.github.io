name: CI

on:
  # 在master分支发生push事件时触发。
  push:
    branches:
      - main
  # 手动触发构建
  workflow_dispatch:
    
# 设置环境变量  
env:
  # 时区（设置时区可使页面中的`最近更新时间`使用时区时间）
  TZ: Asia/Shanghai 

jobs:
  build:
    # 运行在虚拟机环境ubuntu-latest
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      # 检出仓库
      - name: Checkout 
        uses: actions/checkout@v3

      # 安装 Node
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      # 获取 npm 缓存目录
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      
      # 获取node_modules缓存
      - name: Cache node modules
        id: npm-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          
      # 缓存命中检测        
      - if: ${{ steps.npm-cache.outputs.cache-hit == false }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      
      # 安装依赖
      - name: Install dependencies
        run: npm install
      
      # 运行部署脚本
      - name: Run deploy shell
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN_4_GITHUB }} 
          GITEE_TOKEN: ${{ secrets.DEPLOY_TOKEN_4_GITEE }}
        run: npm run deploy
